<?xml version="1.0" encoding="UTF-8" ?>
<!-- SQL맵퍼파일은 xml이기 때문에 제일먼저 xml선언이 옵니다. -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--  Mapper 인터페이스의 패키지 명과 이름을 namespace로 설정합니다. -->
<mapper namespace="com.gant.myhome.mybatis.mapper.AttMapper">
     
     <!-- 
		1. 태크에 id 속성은 Mapper 인터페이스에 추가한 메서드명과 동일하게 작성됩니다.
		2. resultType속성은 연동시킬 메서드에 명시된 반환 타입을 작성해 줍니다.
		-->
    
   
    <select id="Vacationselect" resultType="int">
    select count(*)
    from vacation_num
    where id = #{id}
    </select> 
    
    
    <select id="gethiredate" resultType="String">
    select HIREDATE 
    from members 
    where id = #{id}
    </select> 
    
    <insert id="Vacation_num_insert"> 
    INSERT INTO vacation_num (id , vacation_num)
    VALUES (#{id},#{vacation_num})
    </insert>
    
    <update id="Update_vacation_num">
     update vacation_num
     set vacation_num= vacation_num + 15
    </update>  
    
    <select id="SelectVacation_num" resultType="int">
    select vacation_num
    from vacation_num
    where id = #{id}
    </select>
    
    <select id="AttendanceSelect" resultType="int">
    select count(*)
    from attendance
    where id = #{id}
    </select> 
    
    <insert id="attendance_insert">
     INSERT INTO attendance (id,work_week,checkbutton)
     VALUES (#{id},'00:00:00','false')
    </insert>
    
    <select id="selectCommuteRecord" resultType="attendance">
    select * 
    from commute_record 
    where id = #{id} and work_date = #{now_Day} and endTime = '0'
    </select>
    
    <select id="selectAttendance" resultType="attendance">
    select * 
    from attendance 
    where id = #{id}
    </select>
    
    <update id="Resetwork_week">
     update attendance
     set work_week = '00:00:00'
    </update>
    
    <update id="startTimeUpdate">
     update attendance
     set checkbutton='true'
     where id= #{id}
    </update>
    
    <insert id="insert_commute_record">
     insert into commute_record (id,startTime,work_date,endTime,work_today)
     VALUES (#{id},#{startTime},to_char(SYSDATE, 'YYYYMMDD'),'0','0')
    </insert>
    
    <update id="endTimeUpdate">
    update attendance
    set work_today=#{work_today}, work_week=#{work_week} , overTime=#{overTime} , checkbutton='false'
    where id=#{id}
    </update>

    <update id="Update_commute_record">
    update commute_record
    set endTime = #{endTime} , work_today = #{work_today}
    where id=#{id} and work_date = #{now_Day} and startTime = #{startTime} 
    </update>
    
    <select id="getrecordCount" resultType="int">
      select count(*)
      from commute_record
      where id = #{id}
    </select>
    
    
     <select id="getrecordList" resultType="attendance">
       <![CDATA[
   SELECT *
     FROM (
	      SELECT ROWNUM rnum, j.*
	      FROM (
	            SELECT *
	            FROM commute_record
                where id = #{id}
	            order by work_date DESC ,  startTime DESC
		         ) j
	      WHERE ROWNUM <= #{end} 
	       )
    WHERE rnum >= #{start} AND rnum <= #{end}            
		]]>		
    </select>
    
    <select id="getSearchCount" resultType="int">
      select count(*)
      from commute_record
      where id = #{id} and work_date = #{date_Search}
    </select>
    
     <select id="getSearchList" resultType="attendance">
       <![CDATA[
	   SELECT *
	     FROM (
		      SELECT ROWNUM rnum, j.*
		      FROM (
		            SELECT *
		            FROM commute_record
	                where id = #{id} and work_date = #{date_Search}
		            order by work_date DESC ,  startTime DESC
			         ) j
		      WHERE ROWNUM <= #{end} 
		       )
	    WHERE rnum >= #{start} AND rnum <= #{end}            
		]]>		
    </select>
    
    
    
       
</mapper>
